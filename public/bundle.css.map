{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../layer-cake-example/layercake-Line/src/components/Area.html",
    "../layer-cake-example/layercake-Line/src/components/AxisX.html",
    "../layer-cake-example/layercake-Line/src/components/Line.html",
    "../layer-cake-example/layercake-Line/src/components/AxisY.html",
    "../node_modules/layercake/src/layouts/Svg.html",
    "../node_modules/layercake/src/LayerCakeContainer.html",
    "../node_modules/layercake/src/layouts/Html.html",
    "../node_modules/layercake/src/layouts/Canvas.html",
    "../node_modules/layercake/src/layouts/Webgl.html"
  ],
  "sourcesContent": [
    "<path class='path-area' d='{area}'></path>\n<style>\n  .path-area {\n    fill: #ab00d610;\n  }\n</style>\n<script>\nexport default {\n  namespace: 'svg',\n  computed: {\n    area: ({ $xScale, $domains, $yScale, path }) => {\n      const yRange = $yScale.range();\n      return path + (\n        'L' + $xScale($domains.x[1]) + ',' + yRange[0] +\n        'L' + $xScale($domains.x[0]) + ',' + yRange[0] +\n        'Z'\n      );\n    },\n    path: ({ $data, $xGet, $yGet }) => {\n      return 'M' + $data\n        .map(function (d, i) {\n          return $xGet(d) + ',' + $yGet(d);\n        })\n        .join('L');\n    }\n  }\n};\n</script>",
    "<g class='axis x-axis'>\n  {#each ticks as tick, i}\n    <g class='tick tick-{ tick }' transform='translate({$xScale(tick)},{$yScale.range()[0]})'>\n      {#if opts.gridlines !== false}\n        <line y1='{$height * -1}' y2='0' x1='0' x2='0'></line>\n      {/if}\n      <text y='16' text-anchor='{textAnchor(i)}'>{opts.formatTick ? opts.formatTick(tick) : tick}</text>\n    </g>\n  {/each}\n  {#if opts.baseline === true}\n    <line class=\"baseline\" y1='{$height + 0.5}' y2='{$height + 0.5}' x1='0' x2='{$width}'></line>\n  {/if}\n</g>\n\n<style>\n  .tick {\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  line,\n  .tick line {\n    stroke: #aaa;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #666;\n  }\n\n  .baseline {\n    stroke-dasharray: 0;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg',\n  computed: {\n    ticks: ({ $xScale, opts }) => {\n      return opts.ticks || $xScale.ticks(opts.tickNumber);\n    },\n    textAnchor: ({ ticks, opts }) => {\n      return function (i) {\n        if (opts.snapTicks === true) {\n          if (i === 0) {\n            return 'start';\n          }\n          if (i === ticks.length - 1) {\n            return 'end';\n          }\n        }\n        return 'middle';\n      };\n    }\n  }\n};\n</script>",
    "<path class='path-line' d='{path}' style=\"stroke: {opts.stroke || '#ab00d6'};\"></path>\n<style>\n  .path-line {\n    fill: none;\n    stroke-linejoin: round;\n    stroke-linecap: round;\n    stroke-width: 2;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg',\n  computed: {\n    path: ({ $data, $xGet, $yGet }) => {\n      return 'M' + $data\n        .map((d, i) => {\n          return $xGet(d) + ',' + $yGet(d);\n        })\n        .join('L');\n    }\n  }\n};\n</script>",
    "<g class='axis y-axis' transform='translate(-{$padding.left}, 0)'>\n  {#each $yScale.ticks(opts.ticks || opts.tickNumber || 5) as tick, i}\n    <g class='tick tick-{tick}' transform='translate(0, {$yScale(tick)})'>\n      {#if opts.gridlines !== false}\n        <line x2='100%'></line>\n      {/if}\n      <text y='-4'>{opts.formatTick ? opts.formatTick(tick) : tick}</text>\n    </g>\n  {/each}\n</g>\n\n<style>\n  .tick {\n    font-size: .725em;\n    font-weight: 200;\n  }\n\n  .tick line {\n    stroke: #aaa;\n    stroke-dasharray: 2;\n  }\n\n  .tick text {\n    fill: #666;\n    text-anchor: start;\n  }\n\n  .tick.tick-0 line {\n    stroke-dasharray: 0;\n  }\n</style>\n\n<script>\nexport default {\n  namespace: 'svg'\n};\n</script>",
    "<svg ref:svgLayout data-layout-index=\"{layoutI}\" data-layout=\"Svg\" width=\"{$width + $padding.left + $padding.right}\" height=\"{$height + $padding.bottom + $padding.top}\" style=\"{opts.zIndex ? `z-index:${opts.zIndex};` : ''}\">\n\t{#if opts.defs}\n\t\t<svelte:component this='{opts.defs}' opts='{opts.opts || {}}'/>\n\t{/if}\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t{#each layers as layer}\n\t\t\t<g>\n\t\t\t\t<svelte:component this='{layer.component}' opts='{layer.opts || {}}'/>\n\t\t\t</g>\n\t\t{/each}\n\t</g>\n</svg>\n\n<style>\n\tref:svgLayout {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<div ref:chartContainer class=\"layercake-chart-container\" bind:clientWidth=$containerWidth bind:clientHeight=$containerHeight>\n\t{#each $layouts as layout, i}\n\t\t<svelte:component this='{layout.type}' layoutI='{i}' layers='{layout.layers}' opts='{layout.opts || {}}'/>\n\t{/each}\n</div>\n\n<style>\n\t:global(.layercake-chart-container),\n\t:global(.layercake-chart-container *) {\n\t\tbox-sizing: border-box;\n\t}\n\tref:chartContainer {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<div ref:htmlLayout data-layout-index=\"{layoutI}\" data-layout-type=\"Html\" style=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{opts.zIndex ? `z-index:${opts.zIndex};` : ''}\">\n\t{#each layers as layer}\n\t\t<div ref:htmlLayer>\n\t\t\t<svelte:component this='{layer.component}' opts='{layer.opts || {}}'/>\n\t\t</div>\n\t{/each}\n</div>\n\n<style>\n\tref:htmlLayout,\n\tref:htmlLayer {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<canvas ref:canvasLayout data-layout-index=\"{layoutI}\" data-layout-type=\"Canvas\" style=\"top:{$padding.top}px; left:{$padding.left}px; width:{$width}px; height:{$height}px;{opts.zIndex ? `z-index:${opts.zIndex};` : ''}\">\n</canvas>\n\n<style>\n\tref:canvasLayout{\n\t\tposition: absolute;\n\t}\n</style>\n\n<script>\nimport omit from '../utils/omit.js';\n\nexport default {\n\toncreate () {\n\t\tconst { layers, opts } = this.get();\n\t\tconst canvas = this.refs.canvasLayout;\n\t\tconst ctx = canvas.getContext('2d', omit(opts, ['zIndex']));\n\t\tconst components = layers.map(layer => {\n\t\t\tconst Component = layer.component;\n\t\t\tconst comp = new Component({\n\t\t\t\tdata: {canvas, ctx, opts: layer.opts},\n\t\t\t\tstore: this.store,\n\t\t\t\ttarget: canvas,\n\t\t\t\tcakeRoot: this.root // TODO, document why we're setting cakeRoot\n\t\t\t});\n\t\t\treturn comp;\n\t\t});\n\t\tthis.store.on('update', () => {\n\t\t\tcomponents.forEach(comp => {\n\t\t\t\tcomp.set({canvas, ctx});\n\t\t\t});\n\t\t});\n\t}\n};\n</script>\n",
    "<canvas ref:webglLayout data-layout-index=\"{layoutI}\" data-layout-type=\"Webgl\" style=\"top:{$padding.top}px; left:{$padding.left}px; width:{$width}px; height:{$height}px;{opts.zIndex ? `z-index:${opts.zIndex};` : ''}\">\n</canvas>\n\n<style>\n\tref:webglLayout{\n\t\tposition: absolute;\n\t}\n</style>\n\n<script>\nimport omit from '../utils/omit.js';\n\nexport default {\n\toncreate () {\n\t\tconst { layers, opts } = this.get();\n\t\tconst canvas = this.refs.webglLayout;\n\t\tlet testGl;\n\t\tlet webglCtx;\n\n\t\tconst contextOptions = omit(opts, ['zIndex']);\n\n\t\t// Try to find a working webgl context\n\t\tconst contexts = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];\n\t\tfor (var j = 0; j < contexts.length; j++) {\n\t\t\ttestGl = canvas.getContext(contexts[j], contextOptions);\n\t\t\tif (testGl) {\n\t\t\t\twebglCtx = testGl;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst gl = webglCtx || null;\n\n\t\tconst components = layers.map(layer => {\n\t\t\tconst Component = layer.component;\n\t\t\tconst comp = new Component({\n\t\t\t\tdata: { canvas, gl, opts: layer.opts },\n\t\t\t\tstore: this.store,\n\t\t\t\ttarget: canvas,\n\t\t\t\tcakeRoot: this.root // TODO, document why we're setting cakeRoot\n\t\t\t});\n\t\t\treturn comp;\n\t\t});\n\t\tthis.store.on('update', () => {\n\t\t\tcomponents.forEach(comp => {\n\t\t\t\tcomp.set({ canvas, gl });\n\t\t\t});\n\t\t});\n\t}\n};\n</script>\n"
  ],
  "names": [],
  "mappings": "AAEE,UAAU,eAAC,CAAC,AACV,IAAI,CAAE,SAAS,AACjB,CAAC;ACWD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,mBAAI,CACJ,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,CAAC,AACrB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,IAAI,CAAE,IAAI,AACZ,CAAC,AAED,SAAS,eAAC,CAAC,AACT,gBAAgB,CAAE,CAAC,AACrB,CAAC;AC9BD,UAAU,cAAC,CAAC,AACV,IAAI,CAAE,IAAI,CACV,eAAe,CAAE,KAAK,CACtB,cAAc,CAAE,KAAK,CACrB,YAAY,CAAE,CAAC,AACjB,CAAC;ACKD,KAAK,eAAC,CAAC,AACL,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,CAAC,AACrB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACV,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,KAAK,AACpB,CAAC,AAED,KAAK,sBAAO,CAAC,IAAI,eAAC,CAAC,AACjB,gBAAgB,CAAE,CAAC,AACrB,CAAC;ACfF,oCAAc,CAAC,AACd,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,AACR,CAAC;ACXO,0BAA0B,AAAC,CAC3B,4BAA4B,AAAE,CAAC,AACtC,UAAU,CAAE,UAAU,AACvB,CAAC,AACD,yCAAmB,CAAC,AACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC;ACLD,qCAAc,CACd,oCAAc,CAAC,AACd,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,AACR,CAAC;ACZD,sCAAgB,CAAC,AAChB,QAAQ,CAAE,QAAQ,AACnB,CAAC;ACFD,sCAAe,CAAC,AACf,QAAQ,CAAE,QAAQ,AACnB,CAAC"
}